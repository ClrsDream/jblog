<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaoteng.blog.mappers.PostMapper">

    <sql id="postColumns">id,title,content,user_id,read_num,user_fav_count,comments_count,published_at,created_at,updated_at</sql>

    <insert id="insert" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO posts (title,content,published_at,user_id,read_num) values
        (#{title},#{content},#{publishedAt},#{userId},#{readNum})
    </insert>

    <resultMap id="postDetail" type="Post">
        <constructor>
            <idArg column="id" javaType="java.lang.Long"/>
        </constructor>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="readNum" column="read_num"/>
        <result property="userFavCount" column="user_fav_count"/>
        <result property="commentsCount" column="comments_count"/>
        <result property="publishedAt" column="published_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="nickname" column="user_nickname"/>
            <result property="avatar" column="user_avatar"/>
            <result property="intro" column="user_intro"/>
        </association>
    </resultMap>
    <select id="findById" resultMap="postDetail">
        SELECT
        p.id,
        p.title,
        p.content,
        p.user_id,
        p.read_num,
        p.published_at,
        p.created_at,
        p.updated_at,
        p.user_fav_count,
        p.comments_count,
        u.id as user_id,
        u.nickname as user_nickname,
        u.avatar as user_avatar,
        u.intro as user_intro
        from posts as p
        inner join users as u on p.user_id = u.id
        where p.id = #{id}
    </select>

    <update id="readNumInc">
        UPDATE posts set read_num = read_num + 1 where id = #{id}
    </update>

    <update id="userFavCountDec">
        UPDATE posts set posts.user_fav_count = posts.user_fav_count - 1 where id = #{id}
    </update>

    <update id="userFavCountInc">
        UPDATE posts set posts.user_fav_count = posts.user_fav_count + 1 where id = #{id}
    </update>

    <resultMap id="postPaginateResult" type="Post">
        <constructor>
            <idArg column="id" javaType="java.lang.Long"/>
        </constructor>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="readNum" column="read_num"/>
        <result property="userFavCount" column="user_fav_count"/>
        <result property="commentsCount" column="comments_count"/>
        <result property="publishedAt" column="published_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="nickname" column="user_nickname"/>
            <result property="avatar" column="user_avatar"/>
            <result property="intro" column="user_intro"/>
        </association>
    </resultMap>
    <select id="paginate" resultMap="postPaginateResult">
        SELECT
        p.id,
        p.title,
        p.content,
        p.user_id,
        p.read_num,
        p.user_fav_count,
        p.comments_count,
        p.published_at,
        p.created_at,
        p.updated_at,
        u.id as user_id,
        u.nickname as user_nickname,
        u.avatar as user_avatar,
        u.intro as user_intro
        from posts as p
        inner  join users as u on p.user_id = u.id
        where 1=1
        <if test="userId != null">
            AND p.user_id = #{userId}
        </if>
        ORDER BY ${sort} ${direct}
    </select>

    <select id="count" parameterType="java.lang.Long" resultType="java.lang.Long">
        select
        COUNT(*) as count
        FROM posts where 1 = 1
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
    </select>

    <select id="userFavCount" resultType="java.lang.Long" useCache="true">
        select
        COUNT(*) as count
        FROM user_post_favorite where post_id = #{postId}
    </select>

    <insert id="tagRelationCreate">
        INSERT INTO post_tag (post_id, tag_id) values (#{postId}, #{tagId})
    </insert>

    <select id="paginateUserFav" resultMap="postPaginateResult">
        SELECT
        p.id,
        p.title,
        p.content,
        p.user_id,
        p.read_num,
        p.user_fav_count,
        p.comments_count,
        p.published_at,
        p.created_at,
        p.updated_at,
        u.id as user_id,
        u.nickname as user_nickname,
        u.avatar as user_avatar,
        u.intro as user_intro
        FROM user_post_favorite as upf
        inner join posts p on upf.user_id = p.user_id
        inner join users u on upf.user_id = u.id
        where upf.user_id = #{userId}
    </select>

</mapper>